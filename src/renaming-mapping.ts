export const ENTRYPOINT_RENAMING: { [name in string]: string } = {
  'recv_internal': 'onInternalMessage',
  'recv_external': 'onExternalMessage',
  'run_ticktock': 'onRunTickTock',
  'split_prepare': 'onSplitPrepare',
  'split_install': 'onSplitInstall',
}

export const STDLIB_RENAMING: { [name in string]: string } = {
  'fake_std_fn': 'FAKE_STD_FN',
  'empty_tuple': 'createEmptyTuple',
  'tpush': 'push',
  'first': 'first',
  'at': 'get',
  'touch': 'stackMoveToTop',
  'minmax': 'minMax',
  'my_address': 'contract.getAddress',
  'get_balance': 'contract.getOriginalBalanceWithExtraCurrencies',
  'cur_lt': 'blockchain.logicalTime',
  'block_lt': 'blockchain.currentBlockLogicalTime',
  'cell_hash': 'hash',
  'slice_hash': 'hash',
  'string_hash': 'bitsHash',
  'check_signature': 'isSignatureValid',
  'check_data_signature': 'isSliceSignatureValid',
  'compute_data_size': 'calculateSizeStrict',
  'slice_compute_data_size': 'calculateSizeStrict',
  'compute_data_size?': 'calculateSize',
  'slice_compute_data_size?': 'calculateSize',
  '~dump': 'debug.print',
  '~strdump': 'debug.printString',
  'dump_stack': 'debug.dumpStack',
  'get_data': 'contract.getData',
  'set_data': 'contract.setData',
  'get_c3': 'getTvmRegisterC3',
  'set_c3': 'setTvmRegisterC3',
  'bless': 'transformSliceToContinuation',
  'accept_message': 'acceptExternalMessage',
  'set_gas_limit': 'setGasLimit',
  'commit': 'commitContractDataAndActions',
  'divmod': 'divMod',
  'moddiv': 'modDiv',
  'muldiv': 'mulDivFloor',
  'muldivr': 'mulDivRound',
  'muldivc': 'mulDivCeil',
  'muldivmod': 'mulDivMod',
  'begin_parse': 'beginParse',
  'end_parse': 'assertEnd',
  'load_ref': 'loadRef',
  'preload_ref': 'preloadRef',
  'load_int': 'loadInt',
  'load_uint': 'loadUint',
  'preload_int': 'preloadInt',
  'preload_uint': 'preloadUint',
  'load_bits': 'loadBits',
  'preload_bits': 'preloadBits',
  'load_grams': 'loadCoins',
  'load_coins': 'loadCoins',
  'skip_bits': 'skipBits',
  'first_bits': 'getFirstBits',
  'skip_last_bits': 'removeLastBits',
  'slice_last': 'getLastBits',
  'load_dict': 'loadDict',
  'preload_dict': 'preloadDict',
  'skip_dict': 'skipDict',
  'load_maybe_ref': 'loadMaybeRef',
  'preload_maybe_ref': 'preloadMaybeRef',
  'cell_depth': 'depth',
  'slice_refs': 'remainingRefsCount',
  'slice_bits': 'remainingBitsCount',
  'slice_bits_refs': 'remainingBitsAndRefsCount',
  'slice_empty?': 'isEnd',
  'slice_data_empty?': 'isEndOfBits',
  'slice_refs_empty?': 'isEndOfRefs',
  'slice_depth': 'depth',
  'equal_slices': 'bitsEqual',
  'equal_slice_bits': 'bitsEqual',
  'equal_slices_bits': 'bitsEqual',
  'builder_refs': 'refsCount',
  'builder_bits': 'bitsCount',
  'builder_depth': 'depth',
  'begin_cell': 'beginCell',
  'end_cell': 'endCell',
  'store_ref': 'storeRef',
  'store_uint': 'storeUint',
  'store_int': 'storeInt',
  'store_slice': 'storeSlice',
  'store_grams': 'storeCoins',
  'store_coins': 'storeCoins',
  'store_dict': 'storeDict',
  'store_maybe_ref': 'storeMaybeRef',
  'store_builder': 'storeBuilder',
  'load_msg_addr': 'loadAddress',
  'parse_addr': 'parseAddress',
  'parse_std_addr': 'parseStandardAddress',
  'config_param': 'blockchain.configParam',
  'raw_reserve': 'reserveToncoinsOnBalance',
  'raw_reserve_extra': 'reserveExtraCurrenciesOnBalance',
  'send_raw_message': 'sendRawMessage',
  'set_code': 'contract.setCodePostponed',
  'random': 'random.uint256',
  'rand': 'random.range',
  'get_seed': 'random.getSeed',
  'set_seed': 'random.setSeed',
  'randomize': 'random.initializeBy',
  'randomize_lt': 'random.initialize',
  'dump': 'debug.print',
  'strdump': 'debug.printString',
  'dump_stk': 'debug.dumpStack',
  'empty_list': 'createEmptyList',
  'cons': 'listPrepend',
  'uncons': 'listSplit',
  'list_next': 'listNext',
  'car': 'listGetHead',
  'cdr': 'listGetTail',
  'new_dict': 'createEmptyDict',
  'dict_empty?': 'dictIsEmpty',
  'idict_set_ref': 'iDictSetRef',
  'udict_set_ref': 'uDictSetRef',
  'idict_get_ref': 'iDictGetRefOrNull',
  'idict_get_ref?': 'iDictGetRef',
  'udict_get_ref?': 'uDictGetRef',
  'idict_set_get_ref': 'iDictSetAndGetRefOrNull',
  'udict_set_get_ref': 'iDictSetAndGetRefOrNull',
  'idict_delete?': 'iDictDelete',
  'udict_delete?': 'uDictDelete',
  'idict_get?': 'iDictGet',
  'udict_get?': 'uDictGet',
  'idict_delete_get?': 'iDictDeleteAndGet',
  'udict_delete_get?': 'uDictDeleteAndGet',
  'udict_set': 'uDictSet',
  'idict_set': 'iDictSet',
  'dict_set': 'sDictSet',
  'udict_add?': 'uDictSetIfNotExists',
  'udict_replace?': 'uDictSetIfExists',
  'idict_add?': 'iDictSetIfNotExists',
  'idict_replace?': 'iDictSetIfExists',
  'udict_set_builder': 'uDictSetBuilder',
  'idict_set_builder': 'iDictSetBuilder',
  'dict_set_builder': 'sDictSetBuilder',
  'udict_add_builder?': 'uDictSetBuilderIfNotExists',
  'udict_replace_builder?': 'uDictSetBuilderIfExists',
  'idict_add_builder?': 'iDictSetBuilderIfNotExists',
  'idict_replace_builder?': 'iDictSetBuilderIfExists',
  'udict_delete_get_min': 'uDictDeleteFirstAndGet',
  'idict_delete_get_min': 'iDictDeleteFirstAndGet',
  'dict_delete_get_min': 'sDictDeleteFirstAndGet',
  'udict_delete_get_max': 'uDictDeleteLastAndGet',
  'idict_delete_get_max': 'iDictDeleteLastAndGet',
  'dict_delete_get_max': 'sDictDeleteLastAndGet',
  'udict_get_min?': 'uDictGetFirst',
  'udict_get_max?': 'uDictGetLast',
  'udict_get_min_ref?': 'uDictGetFirstAsRef',
  'udict_get_max_ref?': 'uDictGetLastAsRef',
  'idict_get_min?': 'iDictGetFirst',
  'idict_get_max?': 'iDictGetLast',
  'idict_get_min_ref?': 'iDictGetFirstAsRef',
  'idict_get_max_ref?': 'iDictGetLastAsRef',
  'udict_get_next?': 'uDictGetNext',
  'udict_get_nexteq?': 'uDictGetNextOrEqual',
  'udict_get_prev?': 'uDictGetPrev',
  'udict_get_preveq?': 'uDictGetPrevOrEqual',
  'idict_get_next?': 'iDictGetNext',
  'idict_get_nexteq?': 'iDictGetNextOrEqual',
  'idict_get_prev?': 'iDictGetPrev',
  'idict_get_preveq?': 'iDictGetPrevOrEqual',
  'udict::delete_get_min': 'uDictDeleteFirstAndGet',
  'idict::delete_get_min': 'iDictDeleteFirstAndGet',
  'dict::delete_get_min': 'sDictDeleteFirstAndGet',
  'udict::delete_get_max': 'uDictDeleteLastAndGet',
  'idict::delete_get_max': 'iDictDeleteLastAndGet',
  'dict::delete_get_max': 'sDictDeleteLastAndGet',
  'pfxdict_get?': 'prefixDictGet',
  'pfxdict_set?': 'prefixDictSet',
  'pfxdict_delete?': 'prefixDictDelete',
  'my_code': 'contract.getCode',
  'gas_consumed': 'getGasConsumedAtTheMoment',
  'my_storage_due': 'contract.getStorageDuePayment',
  'get_fee_cofigs': 'getBlockchainFeeConfigParams',
  'get_storage_fee': 'calculateStorageFee',
  'get_compute_fee': 'calculateGasFee',
  'get_simple_compute_fee': 'calculateGasFeeWithoutFlatPrice',
  'get_forward_fee': 'calculateMessageFee',
  'get_simple_forward_fee': 'calculateMessageFeeWithoutLumpPrice',
  'get_original_fwd_fee': 'calculateOriginalMessageFee',
  'is_address_none': 'addressIsNone',
  'skip_maybe_ref': 'skipMaybeRef',
  'load_bool': 'loadBool',
  'store_bool': 'storeBool',
  'store_address_none': 'storeAddressNone',
  'address_none': 'createAddressNone',
  'load_msg_flags': 'loadMsgFlags',
  'is_bounced': 'isMessageBounced',
  'skip_bounced_prefix': 'skipBouncedPrefix',
  'now': 'blockchain.now',
}

export const STDLIB_INTRODUCED_CONSTANTS: { [name in string]: string } = {
  'MASTERCHAIN': '-1',
  'BASECHAIN': '0',
  'BOUNCEABLE': '0x18',
  'NON_BOUNCEABLE': '0x10',
  'SEND_MODE_REGULAR': '0',
  'SEND_MODE_PAY_FEES_SEPARATELY': '1',
  'SEND_MODE_IGNORE_ERRORS': '2',
  'SEND_MODE_DESTROY': '32',
  'SEND_MODE_CARRY_ALL_REMAINING_MESSAGE_VALUE': '64',
  'SEND_MODE_CARRY_ALL_BALANCE': '128',
  'SEND_MODE_BOUNCE_ON_ACTION_FAIL': '16',
  'SEND_MODE_ESTIMATE_FEE_ONLY': '1024',
  'RESERVE_MODE_EXACT_AMOUNT': '0',
  'RESERVE_MODE_ALL_BUT_AMOUNT': '1',
  'RESERVE_MODE_AT_MOST': '2',
  'RESERVE_MODE_INCREASE_BY_ORIGINAL_BALANCE': '4',
  'RESERVE_MODE_NEGATE_AMOUNT': '8',
  'RESERVE_MODE_BOUNCE_ON_ACTION_FAIL': '16',
}

export const STDLIB_DELETED_FUNCTIONS: { [name in string]: true } = {
  'single': true,
  'unsingle': true,
  'pair': true,
  'unpair': true,
  'triple': true,
  'untriple': true,
  'tuple4': true,
  'untuple4': true,
  'second': true,
  'third': true,
  'fourth': true,
  'pair_first': true,
  'pair_second': true,
  'triple_first': true,
  'triple_second': true,
  'triple_third': true,
  'buy_gas': true,
  'parse_var_addr': true,
  'impure_touch': true,
}

export const STDLIB_NOT_FUNCTIONS_BUT_METHODS: { [name in string]: true } = {
  'first': true,
  'at': true,
  'cell_hash': true,
  'slice_hash': true,
  'string_hash': true,
  'compute_data_size': true,
  'slice_compute_data_size': true,
  'compute_data_size?': true,
  'slice_compute_data_size?': true,
  'cell_depth': true,
  'slice_refs': true,
  'slice_bits': true,
  'slice_bits_refs': true,
  'slice_empty?': true,
  'slice_data_empty?': true,
  'slice_refs_empty?': true,
  'slice_depth': true,
  'equal_slices': true,
  'equal_slice_bits': true,
  'equal_slices_bits': true,
  'builder_refs': true,
  'builder_bits': true,
  'builder_depth': true,
  'dict_empty?': true,
}

export const STDLIB_AUTO_IMPORTS: { [name in string]: string } = {
  'createEmptyDict': '@stdlib/tvm-dicts',
  'dictIsEmpty': '@stdlib/tvm-dicts',
  'iDictGet': '@stdlib/tvm-dicts',
  'uDictGet': '@stdlib/tvm-dicts',
  'sDictGet': '@stdlib/tvm-dicts',
  'iDictSet': '@stdlib/tvm-dicts',
  'uDictSet': '@stdlib/tvm-dicts',
  'sDictSet': '@stdlib/tvm-dicts',
  'iDictSetRef': '@stdlib/tvm-dicts',
  'uDictSetRef': '@stdlib/tvm-dicts',
  'sDictSetRef': '@stdlib/tvm-dicts',
  'iDictSetIfNotExists': '@stdlib/tvm-dicts',
  'uDictSetIfNotExists': '@stdlib/tvm-dicts',
  'iDictSetIfExists': '@stdlib/tvm-dicts',
  'uDictSetIfExists': '@stdlib/tvm-dicts',
  'iDictGetRef': '@stdlib/tvm-dicts',
  'uDictGetRef': '@stdlib/tvm-dicts',
  'sDictGetRef': '@stdlib/tvm-dicts',
  'iDictGetRefOrNull': '@stdlib/tvm-dicts',
  'uDictGetRefOrNull': '@stdlib/tvm-dicts',
  'sDictGetRefOrNull': '@stdlib/tvm-dicts',
  'iDictDelete': '@stdlib/tvm-dicts',
  'uDictDelete': '@stdlib/tvm-dicts',
  'sDictDelete': '@stdlib/tvm-dicts',
  'iDictSetAndGet': '@stdlib/tvm-dicts',
  'uDictSetAndGet': '@stdlib/tvm-dicts',
  'sDictSetAndGet': '@stdlib/tvm-dicts',
  'iDictSetAndGetPreviousRefOrNull': '@stdlib/tvm-dicts',
  'uDictSetAndGetPreviousRefOrNull': '@stdlib/tvm-dicts',
  'iDictDeleteAndGet': '@stdlib/tvm-dicts',
  'uDictDeleteAndGet': '@stdlib/tvm-dicts',
  'sDictDeleteAndGet': '@stdlib/tvm-dicts',
  'iDictSetBuilder': '@stdlib/tvm-dicts',
  'uDictSetBuilder': '@stdlib/tvm-dicts',
  'sDictSetBuilder': '@stdlib/tvm-dicts',
  'iDictSetBuilderIfNotExists': '@stdlib/tvm-dicts',
  'uDictSetBuilderIfNotExists': '@stdlib/tvm-dicts',
  'iDictSetBuilderIfExists': '@stdlib/tvm-dicts',
  'uDictSetBuilderIfExists': '@stdlib/tvm-dicts',
  'iDictDeleteFirstAndGet': '@stdlib/tvm-dicts',
  'uDictDeleteFirstAndGet': '@stdlib/tvm-dicts',
  'sDictDeleteFirstAndGet': '@stdlib/tvm-dicts',
  'iDictDeleteLastAndGet': '@stdlib/tvm-dicts',
  'uDictDeleteLastAndGet': '@stdlib/tvm-dicts',
  'sDictDeleteLastAndGet': '@stdlib/tvm-dicts',
  'iDictGetFirst': '@stdlib/tvm-dicts',
  'uDictGetFirst': '@stdlib/tvm-dicts',
  'sDictGetFirst': '@stdlib/tvm-dicts',
  'iDictGetFirstAsRef': '@stdlib/tvm-dicts',
  'uDictGetFirstAsRef': '@stdlib/tvm-dicts',
  'sDictGetFirstAsRef': '@stdlib/tvm-dicts',
  'iDictGetLast': '@stdlib/tvm-dicts',
  'uDictGetLast': '@stdlib/tvm-dicts',
  'sDictGetLast': '@stdlib/tvm-dicts',
  'iDictGetLastAsRef': '@stdlib/tvm-dicts',
  'uDictGetLastAsRef': '@stdlib/tvm-dicts',
  'sDictGetLastAsRef': '@stdlib/tvm-dicts',
  'iDictGetNext': '@stdlib/tvm-dicts',
  'uDictGetNext': '@stdlib/tvm-dicts',
  'iDictGetNextOrEqual': '@stdlib/tvm-dicts',
  'uDictGetNextOrEqual': '@stdlib/tvm-dicts',
  'iDictGetPrev': '@stdlib/tvm-dicts',
  'uDictGetPrev': '@stdlib/tvm-dicts',
  'iDictGetPrevOrEqual': '@stdlib/tvm-dicts',
  'uDictGetPrevOrEqual': '@stdlib/tvm-dicts',
  'prefixDictGet': '@stdlib/tvm-dicts',
  'prefixDictSet': '@stdlib/tvm-dicts',
  'prefixDictDelete': '@stdlib/tvm-dicts',

  'getGasConsumedAtTheMoment': '@stdlib/gas-payments',
  'acceptExternalMessage': '@stdlib/gas-payments',
  'setGasLimitToMaximum': '@stdlib/gas-payments',
  'setGasLimit': '@stdlib/gas-payments',
  'calculateStorageFee': '@stdlib/gas-payments',
  'calculateMessageFee': '@stdlib/gas-payments',
  'calculateMessageFeeWithoutLumpPrice': '@stdlib/gas-payments',
  'calculateOriginalMessageFee': '@stdlib/gas-payments',
  'contract.getStorageDuePayment': '@stdlib/gas-payments',

  'createEmptyList': '@stdlib/lisp-lists',
  'listPrepend': '@stdlib/lisp-lists',
  'listSplit': '@stdlib/lisp-lists',
  'listNext': '@stdlib/lisp-lists',
  'listGetHead': '@stdlib/lisp-lists',
  'listGetTail': '@stdlib/lisp-lists',

  'getTvmRegisterC3': '@stdlib/tvm-lowlevel',
  'setTvmRegisterC3': '@stdlib/tvm-lowlevel',
  'transformSliceToContinuation': '@stdlib/tvm-lowlevel',
  'stackMoveToTop': '@stdlib/tvm-lowlevel',
}

export const REMOVED_BINARY_OPERATORS = {
  "~%": true,
  "^%": true,
  "/%": true,
  "~/=": true,
  "^/=": true,
  "~%=": true,
  "^%=": true,
  "~>>=": true,
  "^>>=": true,
}

export const KEYWORDS_RENAMING: { [name in string]: string } = {
  'nil': 'null',
  'val': 'vall',
  'continue': 'continuee',
  'break': 'breakk',
  'self': 'selff',
}

export const FUNCTIONS_WHERE_DOT_CALL_BECAME_MUTATING: { [name in string]: string } = {
  'load_int': 'int',
  'load_uint': 'int',
  'load_bits': 'slice',
  'load_ref': 'cell',
  'load_grams': 'int',
  'load_coins': 'int',
  'load_dict': 'cell',
  'load_maybe_ref': 'cell',
  'load_msg_addr': 'slice',
  'skip_bits': 'self',
  'skip_last_bits': 'self',
  'skip_dict': 'self',
  'idict_set_ref': 'void',
  'udict_set_ref': 'void',
  'idict_set_get_ref': 'cell',
  'udict_set_get_ref': 'cell',
  'idict_delete?': 'int',
  'udict_delete?': 'int',
  'idict_delete_get?': '(slice, int)',
  'udict_delete_get?': '(slice, int)',
  'udict_set': 'void',
  'idict_set': 'void',
  'dict_set': 'void',
  'udict_add?': 'int',
  'udict_replace?': 'int',
  'idict_add?': 'int',
  'idict_replace?': 'int',
  'udict_set_builder': 'void',
  'idict_set_builder': 'void',
  'dict_set_builder': 'void',
  'udict_add_builder?': 'int',
  'udict_replace_builder?': 'int',
  'idict_add_builder?': 'int',
  'idict_replace_builder?': 'int',
  'udict_delete_get_min': '(int, slice, int)',
  'idict_delete_get_min': '(int, slice, int)',
  'udict::delete_get_min': '(int, slice, int)',
  'idict::delete_get_min': '(int, slice, int)',
  'dict_delete_get_min': '(int, slice, int)',
  'dict::delete_get_min': '(int, slice, int)',
  'udict_delete_get_max': '(int, slice, int)',
  'idict_delete_get_max': '(int, slice, int)',
  'udict::delete_get_max': '(int, slice, int)',
  'idict::delete_get_max': '(int, slice, int)',
  'dict_delete_get_max': '(int, slice, int)',
  'dict::delete_get_max': '(int, slice, int)',
  'pfxdict_set?': 'int',
  'pfxdict_delete?': 'int',
  'tpush': 'void',
  'list_next': 'T',
}

export const STRING_POSTFIXES_TO_FUNCTIONS: { [postfix in string]: string } = {
  'c': 'stringCrc32',
  'H': 'stringSha256',
  'h': 'stringSha256_32',
  's': 'stringHexToSlice',
  'u': 'stringToBase256',
  'a': 'stringAddressToSlice',
}
